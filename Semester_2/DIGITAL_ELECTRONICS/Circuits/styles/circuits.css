/**
 * Digital Electronics Learning Platform - Circuit Styles
 * Enhanced styling for circuit simulators with improved UX
 */

/* ============================================
   CIRCUIT SIMULATOR CONTAINERS
   ============================================ */

.simulator-container {
    background: var(--card-background);
    border-radius: 1rem;
    padding: 2rem;
    margin: 2rem 0;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
}

.simulator-container:hover {
    box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
}

/* ============================================
   FLIP-FLOP SIMULATORS
   ============================================ */

.flip-flop-tabs {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 2rem;
    background: var(--surface-color);
    padding: 0.5rem;
    border-radius: 0.75rem;
    border: 1px solid var(--border-color);
}

.tab-btn {
    flex: 1;
    padding: 1rem 1.5rem;
    border: none;
    background: transparent;
    color: var(--text-secondary);
    font-weight: 500;
    font-size: 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
}

.tab-btn:hover {
    background: var(--hover-color);
    color: var(--text-primary);
    transform: translateY(-1px);
}

.tab-btn.active {
    background: var(--primary-color);
    color: white;
    box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
}

.tab-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.tab-btn:hover::before {
    left: 100%;
}

.flip-flop-content {
    min-height: 600px;
}

.tab-content {
    display: none;
    animation: fadeInUp 0.3s ease-out;
}

.tab-content.active {
    display: block;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.flip-flop-simulator {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    align-items: start;
}

/* ============================================
   CIRCUIT DIAGRAMS
   ============================================ */

.circuit-diagram {
    background: var(--surface-color);
    border-radius: 1rem;
    padding: 2rem;
    border: 2px solid var(--border-color);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.circuit-diagram::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
        radial-gradient(circle at 25% 25%, rgba(59, 130, 246, 0.05) 0%, transparent 50%),
        radial-gradient(circle at 75% 75%, rgba(168, 85, 247, 0.05) 0%, transparent 50%);
    pointer-events: none;
}

.circuit-diagram:hover {
    border-color: var(--primary-color);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.2);
}

.circuit-svg {
    width: 100%;
    max-width: 450px;
    height: auto;
    min-height: 200px;
    transition: all 0.3s ease;
    position: relative;
    z-index: 1;
}

.circuit-svg:hover {
    transform: scale(1.02);
}

/* Wire animations */
.circuit-svg [data-wire] {
    transition: all 0.3s ease;
    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.3));
}

.circuit-svg [data-wire].active {
    stroke: #22c55e !important;
    stroke-width: 3 !important;
    filter: drop-shadow(0 0 4px rgba(34, 197, 94, 0.6));
    animation: pulseWire 1.5s ease-in-out infinite;
}

.circuit-svg [data-wire].high {
    stroke: #ef4444 !important;
    stroke-width: 3 !important;
    filter: drop-shadow(0 0 4px rgba(239, 68, 68, 0.6));
}

@keyframes pulseWire {
    0%, 100% { 
        filter: drop-shadow(0 0 4px rgba(34, 197, 94, 0.6));
    }
    50% { 
        filter: drop-shadow(0 0 8px rgba(34, 197, 94, 0.9));
    }
}

/* ============================================
   CONTROLS AND INPUTS
   ============================================ */

.flip-flop-controls {
    background: var(--surface-color);
    border-radius: 1rem;
    padding: 2rem;
    border: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.input-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.input-group label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: var(--hover-color);
    border-radius: 0.75rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 2px solid transparent;
    position: relative;
    overflow: hidden;
}

.input-group label:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(59, 130, 246, 0.3);
}

.input-group label::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.6s;
}

.input-group label:hover::before {
    left: 100%;
}

.input-group input[type="checkbox"] {
    width: 20px;
    height: 20px;
    accent-color: var(--primary-color);
    cursor: pointer;
    transform: scale(1.2);
}

.input-group span {
    font-weight: 600;
    font-size: 1.1rem;
}

/* Enhanced Buttons */
.clock-btn, .reset-btn, .step-btn, .start-btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 0.75rem;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.clock-btn {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

.clock-btn:hover {
    background: linear-gradient(135deg, #2563eb, #1e40af);
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(59, 130, 246, 0.6);
}

.clock-btn:active {
    transform: translateY(-1px);
    animation: clockPulse 0.3s ease;
}

@keyframes clockPulse {
    0% { transform: translateY(-1px) scale(1); }
    50% { transform: translateY(-1px) scale(1.05); }
    100% { transform: translateY(-1px) scale(1); }
}

.reset-btn {
    background: linear-gradient(135deg, #ef4444, #dc2626);
    color: white;
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
}

.reset-btn:hover {
    background: linear-gradient(135deg, #dc2626, #b91c1c);
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(239, 68, 68, 0.6);
}

.step-btn, .start-btn {
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
}

.step-btn:hover, .start-btn:hover {
    background: linear-gradient(135deg, #059669, #047857);
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(16, 185, 129, 0.6);
}

/* Button ripple effect */
.clock-btn::before, .reset-btn::before, .step-btn::before, .start-btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s;
}

.clock-btn:active::before, .reset-btn:active::before, 
.step-btn:active::before, .start-btn:active::before {
    width: 300px;
    height: 300px;
}

/* ============================================
   STATE DISPLAYS
   ============================================ */

.flip-flop-state {
    margin-top: 1.5rem;
    padding: 1.5rem;
    background: var(--surface-color);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
}

.state-display {
    display: flex;
    gap: 2rem;
    justify-content: center;
    align-items: center;
}

.state-display span {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    padding: 1rem 1.5rem;
    background: var(--hover-color);
    border-radius: 0.75rem;
    border: 2px solid var(--border-color);
    transition: all 0.3s ease;
    min-width: 80px;
    text-align: center;
}

.state-display span:has(#jk-q-output[data-value="1"]),
.state-display span:has(#d-q-output[data-value="1"]),
.state-display span:has(#t-q-output[data-value="1"]) {
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    border-color: #10b981;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    animation: pulseHigh 1s ease-in-out infinite;
}

@keyframes pulseHigh {
    0%, 100% { 
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }
    50% { 
        box-shadow: 0 8px 20px rgba(16, 185, 129, 0.5);
    }
}

/* ============================================
   TRUTH TABLES
   ============================================ */

.truth-table {
    background: var(--surface-color);
    border-radius: 1rem;
    padding: 2rem;
    border: 1px solid var(--border-color);
    overflow: hidden;
}

.truth-table h3 {
    margin-bottom: 1.5rem;
    color: var(--text-primary);
    font-size: 1.3rem;
    text-align: center;
}

.truth-table table {
    width: 100%;
    border-collapse: collapse;
    background: white;
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.truth-table th {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    padding: 1rem;
    font-weight: 600;
    font-size: 1.1rem;
    text-align: center;
    border: none;
}

.truth-table td {
    padding: 1rem;
    text-align: center;
    border-bottom: 1px solid var(--border-color);
    font-weight: 500;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.truth-table tr:hover {
    background: rgba(59, 130, 246, 0.1);
    transform: scale(1.02);
}

.truth-table tr.active {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.1));
    border-left: 4px solid #10b981;
    animation: highlightRow 0.5s ease;
}

@keyframes highlightRow {
    0% { background: rgba(16, 185, 129, 0.4); }
    100% { background: linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(16, 185, 129, 0.1)); }
}

/* ============================================
   COUNTER DISPLAYS
   ============================================ */

.counter-display {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    padding: 2rem;
    background: var(--surface-color);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
}

.bit-cells {
    display: flex;
    gap: 0.75rem;
}

.bit-cell {
    width: 60px;
    height: 60px;
    background: var(--hover-color);
    border: 3px solid var(--border-color);
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.bit-cell::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
    transform: translateX(-100%);
    transition: transform 0.6s;
}

.bit-cell:hover::before {
    transform: translateX(100%);
}

.bit-cell.active {
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    border-color: #10b981;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
    transform: scale(1.1);
    animation: bitFlip 0.5s ease;
}

@keyframes bitFlip {
    0% { transform: scale(1.1) rotateY(0deg); }
    50% { transform: scale(1.1) rotateY(90deg); }
    100% { transform: scale(1.1) rotateY(0deg); }
}

.count-display, .binary-display, .decimal-display {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    padding: 1rem 2rem;
    background: var(--hover-color);
    border-radius: 0.75rem;
    border: 2px solid var(--border-color);
    min-width: 120px;
    text-align: center;
    transition: all 0.3s ease;
}

.count-display:hover, .binary-display:hover, .decimal-display:hover {
    background: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
    transform: scale(1.05);
}

/* ============================================
   DECODER DISPLAYS
   ============================================ */

.decoder-outputs {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
    gap: 1rem;
    padding: 2rem;
    background: var(--surface-color);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
}

.output-pin {
    width: 80px;
    height: 80px;
    background: var(--hover-color);
    border: 3px solid var(--border-color);
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    color: var(--text-primary);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.output-pin::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s;
}

.output-pin:hover::before {
    opacity: 1;
}

.output-pin.active {
    background: linear-gradient(135deg, #ef4444, #dc2626);
    color: white;
    border-color: #ef4444;
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
    transform: scale(1.1);
    animation: outputPulse 0.3s ease;
}

@keyframes outputPulse {
    0% { transform: scale(1.1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1.1); }
}

.output-pin .pin-label {
    font-size: 0.8rem;
    font-weight: 500;
}

.output-pin .pin-value {
    font-size: 1.2rem;
    font-weight: 700;
}

/* ============================================
   7-SEGMENT DISPLAY
   ============================================ */

.seven-segment-display {
    width: 120px;
    height: 180px;
    margin: 2rem auto;
    position: relative;
    background: #1a1a1a;
    border-radius: 0.5rem;
    padding: 1rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.segment {
    position: absolute;
    background: #333;
    transition: all 0.3s ease;
    border-radius: 2px;
}

.segment.active {
    background: #ff0000;
    box-shadow: 0 0 10px #ff0000;
    animation: segmentGlow 1s ease-in-out infinite;
}

@keyframes segmentGlow {
    0%, 100% { 
        box-shadow: 0 0 10px #ff0000;
    }
    50% { 
        box-shadow: 0 0 20px #ff0000;
    }
}

/* Segment positioning */
.segment.a { top: 5px; left: 15px; width: 50px; height: 8px; }
.segment.b { top: 15px; right: 5px; width: 8px; height: 40px; }
.segment.c { bottom: 15px; right: 5px; width: 8px; height: 40px; }
.segment.d { bottom: 5px; left: 15px; width: 50px; height: 8px; }
.segment.e { bottom: 15px; left: 5px; width: 8px; height: 40px; }
.segment.f { top: 15px; left: 5px; width: 8px; height: 40px; }
.segment.g { top: 50%; left: 15px; width: 50px; height: 8px; transform: translateY(-50%); }

/* ============================================
   RESPONSIVE DESIGN
   ============================================ */

@media (max-width: 768px) {
    .flip-flop-simulator {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }
    
    .flip-flop-tabs {
        flex-direction: column;
    }
    
    .tab-btn {
        padding: 0.75rem 1rem;
        font-size: 0.9rem;
    }
    
    .circuit-svg {
        max-width: 100%;
        height: auto;
    }
    
    .bit-cells {
        gap: 0.5rem;
    }
    
    .bit-cell {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }
    
    .state-display {
        flex-direction: column;
        gap: 1rem;
    }
    
    .clock-btn, .reset-btn, .step-btn, .start-btn {
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        min-height: 44px;
    }
}

@media (max-width: 480px) {
    .simulator-container {
        padding: 1rem;
        margin: 1rem 0;
    }
    
    .circuit-diagram, .flip-flop-controls, .truth-table {
        padding: 1rem;
    }
    
    .bit-cell {
        width: 40px;
        height: 40px;
        font-size: 1rem;
    }
    
    .decoder-outputs {
        grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
        gap: 0.5rem;
    }
    
    .output-pin {
        width: 60px;
        height: 60px;
    }
}

/* ============================================
   LOADING AND TRANSITION STATES
   ============================================ */

.loading {
    opacity: 0.6;
    pointer-events: none;
    position: relative;
}

.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30px;
    height: 30px;
    border: 3px solid var(--border-color);
    border-top: 3px solid var(--primary-color);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* ============================================
   ENHANCED INTERACTIVITY
   ============================================ */

.interactive-element {
    cursor: pointer;
    user-select: none;
    transition: all 0.2s ease;
}

.interactive-element:hover {
    transform: scale(1.02);
}

.interactive-element:active {
    transform: scale(0.98);
}

/* Pulse animation for active elements */
.pulse {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
}

/* Success animation */
.success-flash {
    animation: successFlash 0.6s ease;
}

@keyframes successFlash {
    0% { background-color: transparent; }
    50% { background-color: rgba(16, 185, 129, 0.2); }
    100% { background-color: transparent; }
}

/* Error animation */
.error-shake {
    animation: errorShake 0.5s ease;
}

@keyframes errorShake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
    20%, 40%, 60%, 80% { transform: translateX(5px); }
}
